#2019 11 24 21:35
import pywikibot
from pywikibot import pagegenerators as pg
import sys

commit=True
verbose=True

russiansquery='select ?item where {?item wdt:P31 wd:Q5 . ?item wdt:P27 wd:Q15180 }' #russische personen

srclng='nl'
srcsite=srclng+'wiki'
convertstr={
            'a':'a','b':'b','c':'c','d':'d','e':'e','f':'f','g':'g','h':'h','i':'i','j':'j','k':'k','l':'l','m':'m',
            'n':'n','o':'o','p':'p','q':'q','r':'r','s':'s','t':'t','u':'u','v':'v','w':'w','x':'x','y':'y','z':'z',
            'A':'A','B':'B','C':'C','D':'D','E':'E','F':'F','G':'G','H':'H','I':'I','J':'J','K':'K','L':'L','M':'M',
            'N':'N','O':'O','P':'P','Q':'Q','R':'R','S':'S','T':'T','U':'U','V':'V','W':'W','X':'X','Y':'Y','Z':'Z','Ç':'C','ç':'c',
            'æ':'ae','Æ':'AE','û':'u','(':'(',')':')','*':'*','ñ':'n','Ñ':'N','ª':'a','º':'o','¿':'?','½':'1/2','¼':'1/4','¡':'!','[':'[',']':']',
            'α':'a','ß':'ss','π':'pi','σ':'delta','τ':'teta','Φ':'phi',' ':' ','-':'-','+':'+','!':'!',
            '1':'1','2':'2','3':'3','4':'4','5':'5','6':'6','7':'7','8':'8','9':'9','=':'=','-':'-','_':'_',';':';','¹':'1','ʿ':'\'',
            '@':'@','#':'#','$':'$','%':'%','^':'^','&':'&','|':'|','\\':'\\','{':'{','}':'}','`':'`','\'':'\'','’':'’',
            'ğ':'g',',':',','.':'.','—':'—','ë':'e','–':'–','»':'»','«':'«','ъ':'','Đ':'D',':':':','?':'?','>':'>','⁵':'',
            'Ł':'L','ź':'z','ł':'l','ż':'z','ń':'n','ś':'s','/':'/','Ś':'S','ą':'a','Ż':'Z','ć':'c','ț':'t','ḥ':'h','ắ':'a',
            'Ć':'C','č':'c','ň':'n','ý':'y','Ý':'Y','ř':'r','š':'s','đ':'d','ž':'z','Ž':'Z','Č':'C','Š':'S','ş':'s','Ş':'S','ď':'d',
            'ș':'s','Î':'I','œ':'oe','ø':'o','ð':'d','Ð':'D','æ':'ae','Œ':'OE','Ľ':'L','·':'·','þ':'Th','Þ':'th','±':'±','ÿ':'ij','ŋ':'n','İ':'i',
            'ņ':'n','ǎ':'a','ū':'u','ė':'e','"':'"','ǔ':'u','“':'"','”':'"','Ğ':'G','×':'*','Ń':'N','€':'eur','•':'*','ṣ':'s',
            'ã':'a','Ă':'A','ă':'a','Á':'A','â':'a','ä':'a','à':'a','å':'a','á':'a','ā':'a','À':'A','Ä':'A','Å':'A','ậ':'a','Â':'A','ạ':'a','ť':'t','ť':'t','ŏ':'o','ẩ':'a',' ỹ':'y','':'','':'','':'','':'','':'','':'','':'',
            'ệ':'e','ě':'e','ę':'e','ế':'e','é':'e','É':'E','Ê':'E','ê':'e','ë':'e','è':'e','È':'E','ē':'e','Ē':'E','ə':'e','Ď':'D','ỹ':'y','ỳ':'y','':'','':'','':'','':'','':'','':'','':'','':'',
            'ị':'i','ī':'i','ì':'i','ï':'i','î':'i','ľ':'I','Í':'i','í':'i','ĕ':'e','Ə':'e','Ḥ':'H','≡':'','¨':'','¸':'','':'','':'','':'','':'','':'','':'','':'',
            'Ö':'O','ő':'o','Ø':'O','Ǿ':'O','ō':'o','õ':'o','0':'0','ó':'o','ô':'o','ö':'o','ò':'o','Ò':'O','Ō':'O','Ó':'O','о':'o','Õ':'O','Ř':'R','':'','':'','':'','':'','':'','':'','':'','':'','':'',
            'Ú':'U','Ů':'U','ů':'u','Ú':'U','ü':'u','ú':'u','Ü':'U','ù':'u','ı':'I','ŭ':'u','М':'M','А':'A','²':'2','ơ':'o','⁴':'','ư':'u',
             'а':'a','б':'b','':'c','д':'d','е':'e','ф':'f','г':'g','х':'h','и':'i','ю':'ju','к':'k','л':'l','м':'m','н':'n','о':'o','п':'p','':'q','р':'r','с':'s','т':'t','':'u','в':'v','':'w','':'x','й':'y','з':'z',
             'А':'A','Б':'B','':'C','Д':'D','Э':'E','Ф':'F','Г':'G','Х':'H','И':'I','Ю':'Ju','К':'K','Л':'L','М':'M','Н':'N','О':'O','П':'P','':'Q','Р':'R','С':'S','Т':'T','':'U','В':'V','':'W','':'X','Й':'Y','З':'Z',
             'ж':'zj','э':'e','л':'l',' ':' ','?':'?','ш':'sj','ч':'tsj',',':',','у':'oe','ы':'i','Ы':'I','Щ':'Sjtsj','щ':'sjtsj',';':';',
             'х':'ch','У':'Oe','ц':'ts','-':'-','Ж':'Zj','Я':'Ja','я':'ja','Ш':'Sj','Ч':'Tsj','Ё':'Jo','ё':'jo','+':'+','=':'=','/':'/','Ц':'Ts','Е':'E','ь':'','.':'.',
             'a':'a','b':'b','c':'c','d':'d','e':'e','f':'f','g':'g','h':'h','i':'i','j':'j','k':'k','l':'l','m':'m','n':'n','o':'o','p':'p','q':'q','r':'r','s':'s','t':'t','u':'u','v':'v','w':'w','x':'x','y':'y','z':'z',
             'A':'A','B':'B','C':'C','D':'D','E':'E','F':'F','G':'G','H':'H','I':'I','J':'J','K':'K','L':'L','M':'M','N':'N','O':'O','P':'P','Q':'Q','R':'R','S':'S','T':'T','U':'U','V':'V','W':'W','X':'X','Y':'Y','Z':'Z',
             '1':'1','2':'2','3':'3','4':'4','5':'5','6':'6','7':'7','8':'8','9':'9','0':'0','(':'(',')':')','$':'$','\'':'\'','®':'(R)','ġ':'g',
             'і':'i','’':'’','ë':'e','и́':'i','–':'–','_':'_','»':'»','«':'«','ъ':'','—':'—','Є':'Je','є':'je',':':':','ɛ':'g','ũ':'u','Ġ':'G','ĩ':'i','ầ':'a',
               'б':'b','в':'v','г':'g','д':'d','ђ':'dj','е':'e','ж':'zj','з':'z','и':'i','ј':'j','к':'k','л':'l','љ':'lj','м':'m','н':'n','њ':'nj','о':'o','п':'p','р':'r','с':'s','т':'t','ћ':'ć','у':'u','ф':'f','х':'h','ц':'c','ч':'č','џ':'dž','ш':'š',
               'В':'V','Ђ':'Dj','Е':'E','Ж':'Zj','З':'Z','И':'I','Ј':'J','К':'K','Л':'L','Љ':'Lj','М':'M','Н':'N','Њ':'Nj','О':'O','П':'P','Р':'R','С':'S','Т':'T','Ћ':'Ć','У':'U','Ф':'F','Х':'H','Ц':'C','Ч':'Č','Џ':'Dž','Ш':'Š',
               'a':'a','b':'b','c':'c','d':'d','e':'e','f':'f','g':'g','h':'h','i':'i','j':'j','k':'k','l':'l','m':'m','n':'n','o':'o','p':'p','q':'q','r':'r','s':'s','t':'t','u':'u','v':'v','w':'w','x':'x','y':'y','z':'z',
               'A':'A','B':'B','C':'C','D':'D','E':'E','F':'F','G':'G','H':'H','I':'I','J':'J','K':'K','L':'L','M':'M','N':'N','O':'O','P':'P','Q':'Q','R':'R','S':'S','T':'T','U':'U','V':'V','W':'W','X':'X','Y':'Y','Z':'Z',
               '1':'1','2':'2','3':'3','4':'4','5':'5','6':'6','7':'7','8':'8','9':'9','0':'0','(':'(',')':')','$':'$','\'':'\'','-':'-','.':'.','—':'—',' ':' ','–':'–','‘':'\'','~':'~','φ':'f',
               '’':'’','_':'_','»':'»','«':'«','ъ':'',':':':',';':';','Ķ':'K','ļ':'l','¥':'Y','°':'°','ļ':'l','ģ':'g','♯':'#','³':'3','ễ':'e','Ā':'A','Ș':'S',
            }
            
convertstr={'':'','a':'a','b':'b','c':'c','d':'d','e':'e','f':'f','g':'g','h':'h','i':'i','j':'j','k':'k','l':'l','m':'m','n':'n','o':'o','p':'p','q':'q','r':'r','s':'s','t':'t','u':'u','v':'v','w':'w','x':'x','y':'y','z':'z'
,'A':'A','B':'B','C':'C','D':'D','E':'E','F':'F','G':'G','H':'H','I':'I','J':'J','K':'K','L':'L','M':'M','N':'N','O':'O','P':'P','Q':'Q','R':'R','S':'S','T':'T','U':'U','V':'V','W':'W','X':'X','Y':'Y','Z':'Z',
'Ç':'C','ç':'c','æ':'ae','Æ':'AE','û':'u','(':'(',')':')','*':'*','ñ':'n','Ñ':'N','ª':'a','º':'o','¿':'?','½':'1/2','¼':'1/4','¡':'!','[':'[',']':']','α':'a','ß':'ss','π':'pi','σ':'delta','τ':'teta','Φ':'phi',
' ':' ','-':'-','+':'+','!':'!','1':'1','2':'2','3':'3','4':'4','5':'5','6':'6','7':'7','8':'8','9':'9','=':'=','_':'_',';':';','¹':'1','ʿ': "'", '@':'@','#':'#','$':'$','%':'%','^':'^','&':'&','|':'|',
'\\':'\\','{':'{','}':'}','`':'`', "'": "'", '’':'’','ğ':'g',',':',','.':'.','—':'—','ë':'e','–':'–','»':'»','«':'«','ъ':'b','Đ':'D',':':':','?':'?','>':'>','⁵':'','Ł':'L','ź':'z','ł':'l','ż':'z','ń':'n',
'ś':'s','/':'/','Ś':'S','ą':'a','Ż':'Z','ć':'c','ț':'t','ḥ':'h','ắ':'a','Ć':'C','č':'c','ň':'n','ý':'y','Ý':'Y','ř':'r','š':'s','đ':'d','ž':'z','Ž':'Z','Č':'C','Š':'S','ş':'s','Ş':'S','ď':'d','ș':'s','Î':'I',
'œ':'oe','ø':'o','ð':'d','Ð':'D','Œ':'OE','Ľ':'L','·':'·','þ':'Th','Þ':'th','±':'±','ÿ':'ij','ŋ':'n','İ':'i','ņ':'n','ǎ':'a','ū':'u','ė':'e','"':'"','ǔ':'u','“':'"','”':'"','Ğ':'G','×':'*','Ń':'N','€':'eur',
'•':'*','ṣ':'s','ã':'a','Ă':'A','ă':'a','Á':'A','â':'a','ä':'a','à':'a','å':'a','á':'a','ā':'a','À':'A','Ä':'A','Å':'A','ậ':'a','Â':'A','ạ':'a','ť':'t','ŏ':'o','ẩ':'a',' ỹ':'y','ệ':'e','ě':'e','ę':'e','ế':'e',
'é':'e','É':'E','Ê':'E','ê':'e','è':'e','È':'E','ē':'e','Ē':'E','ə':'e','Ď':'D','ỹ':'y','ỳ':'y','ị':'i','ī':'i','ì':'i','ï':'i','î':'i','ľ':'I','Í':'i','í':'i','ĕ':'e','Ə':'e','Ḥ':'H','≡':'','¨':'','¸':'',
'Ö':'O','ő':'o','Ø':'O','Ǿ':'O','ō':'o','õ':'o','0':'0','ó':'o','ô':'o','ö':'o','ò':'o','Ò':'O','Ō':'O','Ó':'O','о':'o','Õ':'O','Ř':'R','Ú':'U','Ů':'U','ů':'u','ü':'u','ú':'u','Ü':'U','ù':'u','ı':'I','ŭ':'u',
'М':'M','А':'A','²':'2','ơ':'o','⁴':'','ư':'u','а':'a','б':'b','д':'d','е':'e','ф':'f','г':'g','х':'h','и':'i','ю':'ju','к':'k','л':'l','м':'m','н':'n','п':'p','р':'r','с':'s','т':'t','в':'v','й':'y','з':'z',
'Б':'B','Д':'D','Э':'E','Ф':'F','Г':'G','Х':'H','И':'I','Ю':'Ju','К':'K','Л':'L','Н':'N','О':'O','П':'P','Р':'R','С':'S','Т':'T','В':'V','Й':'Y','З':'Z','ж':'zj','э':'e','ш':'š','ч':'č','у':'u','ы':'i','Ы':'I',
'Щ':'Sjtsj','щ':'sjtsj','У':'U','ц':'c','Ж':'Zj','Я':'Ja','я':'ja','Ш':'Š','Ч':'Č','Ё':'Jo','ё':'jo','Ц':'C','Е':'E','ь':'b','®':'(R)','ġ':'g','і':'i','и́':'i','Є':'Je','є':'je','ɛ':'g','ũ':'u','Ġ':'G','ĩ':'i',
'ầ':'a','ђ':'dj','ј':'j','љ':'lj','њ':'nj','ћ':'ć','џ':'dž','Ђ':'Dj','Ј':'J','Љ':'Lj','Њ':'Nj','Ћ':'Ć','Џ':'Dž','‘': "'", '~':'~','φ':'f','Ķ':'K','ļ':'l','¥':'Y','°':'°','ģ':'g','♯':'#','³':'3','ễ':'e','Ā':'A','Ș':'S',
'\x01':'','\x02':'','\x03':'','\x04':'','\x05':'','\x06':'','\x07':'','\x08':'','\t':'','\n':'','\x0b':'','\x0c':'','\r':'','\x0e':'','\x0f':'','\x10':'','\x11':'','\x12':'','\x13':'','\x14':'','\x15':'','\x16':'','\x17':'',
'\x18':'','\x19':'','\x1a':'','\x1b':'','\x1c':'','\x1d':'','\x1e':'','\x1f':'','<':'','\x7f':'','\x80':'','\x81':'','\x82':'','\x83':'','\x84':'','\x85':'','\x86':'','\x87':'','\x88':'','\x89':'','\x8a':'','\x8b':'',
'\x8c':'','\x8d':'','\x8e':'','\x8f':'','\x90':'','\x91':'','\x92':'','\x93':'','\x94':'','\x95':'','\x96':'','\x97':'','\x98':'','\x99':'','\x9a':'','\x9b':'','\x9c':'','\x9d':'','\x9e':'','\x9f':'','\xa0':'',
'¢':'ct','£':'pound','¤':'','¦':'','§':'','©':'(c)','¬':'','\xad':'','¯':'','´':'','µ':'u','¶':'q','¾':'3/4','Ã':'A','Ë':'E','Ì':'I','Ï':'I','Ô':'O','Ù':'U','Û':'U','÷':'','Ą':'A','Ĉ':'C','ĉ':'c','Ċ':'C','ċ':'c',
'Ĕ':'E','Ė':'E','Ę':'E','Ě':'E','Ĝ':'G','ĝ':'g','Ģ':'G','Ĥ':'H','ĥ':'h','Ħ':'H','ħ':'h','Ĩ':'I','Ī':'I','Ĭ':'I','ĭ':'i','Į':'I','į':'i','Ĳ':'IJ','ĳ':'ij','Ĵ':'J','ĵ':'j','ķ':'k','ĸ':'k','Ĺ':'L','ĺ':'i',
'Ļ':'L','Ŀ':'L','ŀ':'l','Ņ':'n','Ň':'N','ŉ':'n','Ŋ':'N','Ŏ':'O','Ő':'O','Ŕ':'R','ŕ':'r','Ŗ':'R','ŗ':'r','Ŝ':'S','ŝ':'s','Ţ':'T','ţ':'t','Ť':'T','Ŧ':'T','ŧ':'t','Ũ':'U','Ū':'U','Ŭ':'U','Ű':'U','ű':'u','Ų':'U',
'ų':'u','Ŵ':'W','ŵ':'w','Ŷ':'Y','ŷ':'y','Ÿ':'Y','Ź':'Z','ſ':'f','ƀ':'b','Ɓ':'B','Ƃ':'B','ƃ':'b','Ƅ':'b','ƅ':'b','Ɔ':'C','Ƈ':'C','ƈ':'c','Ɖ':'D','Ɗ':'D','Ƌ':'E','ƌ':'d','ƍ':'o','Ǝ':'E','Ɛ':'E','Ƒ':'F','ƒ':'f',
'Ɠ':'G','Ɣ':'V','ƕ':'','Ɩ':'I','Ɨ':'I','Ƙ':'K','ƙ':'k','ƚ':'l','ƛ':'m','Ɯ':'M','Ɲ':'N','ƞ':'n','Ɵ':'O','Ơ':'O','Ƣ':'Q','ƣ':'q','Ƥ':'P','ƥ':'p','Ʀ':'r','Ƨ':'S','ƨ':'s','Ʃ':'S','ƪ':'s','ƫ':'t','Ƭ':'T',
'ƭ':'t','Ʈ':'T','Ư':'U','Ʊ':'u','Ʋ':'U','Ƴ':'Y','ƴ':'y','Ƶ':'Z','ƶ':'z','Ʒ':'z','Ƹ':'z','ƹ':'z','ƺ':'','ƻ':'','Ƽ':'5','ƽ':'5','ƾ':'','ƿ':'','ǀ':'','ǁ':'','ǂ':'','ǃ':'','Ǆ':'DZ','ǅ':'Dz','ǆ':'dz',
'Ǉ':'IJ','ǈ':'ij','ǉ':'ij','Ǌ':'NJ','ǋ':'Nj','ǌ':'nj','Ǎ':'A','Ǐ':'I','ǐ':'i','Ǒ':'O','ǒ':'o','Ǔ':'U','Ǖ':'U','ǖ':'u','Ǘ':'U','ǘ':'u','Ǚ':'U','ǚ':'u','Ǜ':'U','ǜ':'u','ǝ':'e','Ǟ':'A','ǟ':'a','Ǡ':'A','ǡ':'a',
'Ǣ':'AE','ǣ':'ae','Ǥ':'G','ǥ':'g','Ǧ':'G','ǧ':'g','Ǩ':'K','ǩ':'k','Ǫ':'Q','ǫ':'q','Ǭ':'Q','ǭ':'q','Ǯ':'3','ǯ':'3','ǰ':'j','Ǳ':'DZ','ǲ':'Dz','ǳ':'dz','Ǵ':'G','ǵ':'g','Ƕ':'Hu','Ƿ':'','Ǹ':'N','ǹ':'n',
'Ǻ':'A','ǻ':'a','Ǽ':'AE','ǽ':'ae','ǿ':'o'}



ru_cyrilic2latin = { 'а':'a','б':'b','д':'d','е':'e','ф':'f','г':'g','х':'h','и':'i','ю':'ju','к':'k','л':'l','м':'m','н':'n','о':'o','п':'p','р':'r','с':'s','т':'t','в':'v','й':'y','з':'z',
                     'А':'A','Б':'B','Д':'D','Э':'E','Ф':'F','Г':'G','Х':'H','И':'I','Ю':'Ju','К':'K','Л':'L','М':'M','Н':'N','О':'O','П':'P','Р':'R','С':'S','Т':'T','В':'V','Й':'Y','З':'Z',
                     'ж':'zj','э':'e','л':'l',' ':' ','?':'?','ш':'sj','ч':'tsj',',':',','у':'oe','ы':'i','Ы':'I','Щ':'Sjtsj','щ':'sjtsj',';':';',
                     'х':'ch','У':'Oe','ц':'ts','-':'-','Ж':'Zj','Я':'Ja','я':'ja','Ш':'Sj','Ч':'Tsj','Ё':'Jo','ё':'jo','+':'+','=':'=','/':'/','Ц':'Ts','Е':'E','ь':'','.':'.',
                     'a':'a','b':'b','c':'c','d':'d','e':'e','f':'f','g':'g','h':'h','i':'i','j':'j','k':'k','l':'l','m':'m','n':'n','o':'o','p':'p','q':'q','r':'r','s':'s','t':'t','u':'u','v':'v','w':'w','x':'x','y':'y','z':'z',
                     'A':'A','B':'B','C':'C','D':'D','E':'E','F':'F','G':'G','H':'H','I':'I','J':'J','K':'K','L':'L','M':'M','N':'N','O':'O','P':'P','Q':'Q','R':'R','S':'S','T':'T','U':'U','V':'V','W':'W','X':'X','Y':'Y','Z':'Z',
                     '1':'1','2':'2','3':'3','4':'4','5':'5','6':'6','7':'7','8':'8','9':'9','0':'0','(':'(',')':')','$':'$','\'':'\'',
                     'і':'i','’':'’','ë':'e','и́':'i','–':'–','_':'_','»':'»','«':'«','ъ':'','—':'—','Є':'Je','є':'je',':':'',':':'','':'','':'','':'','':''}

sr_cyrilic2latin = {'а':'a','б':'b','в':'v','г':'g','д':'d','ђ':'dj','е':'e','ж':'zj','з':'z','и':'i','ј':'j','к':'k','л':'l','љ':'lj','м':'m','н':'n','њ':'nj','о':'o','п':'p','р':'r','с':'s','т':'t','ћ':'ć','у':'u','ф':'f','х':'h','ц':'c','ч':'č','џ':'dž','ш':'š',
                    'А':'A','Б':'B','В':'V','Г':'G','Д':'D','Ђ':'Dj','Е':'E','Ж':'Zj','З':'Z','И':'I','Ј':'J','К':'K','Л':'L','Љ':'Lj','М':'M','Н':'N','Њ':'Nj','О':'O','П':'P','Р':'R','С':'S','Т':'T','Ћ':'Ć','У':'U','Ф':'F','Х':'H','Ц':'C','Ч':'Č','Џ':'Dž','Ш':'Š',
                     'a':'a','b':'b','c':'c','d':'d','e':'e','f':'f','g':'g','h':'h','i':'i','j':'j','k':'k','l':'l','m':'m','n':'n','o':'o','p':'p','q':'q','r':'r','s':'s','t':'t','u':'u','v':'v','w':'w','x':'x','y':'y','z':'z',
                     'A':'A','B':'B','C':'C','D':'D','E':'E','F':'F','G':'G','H':'H','I':'I','J':'J','K':'K','L':'L','M':'M','N':'N','O':'O','P':'P','Q':'Q','R':'R','S':'S','T':'T','U':'U','V':'V','W':'W','X':'X','Y':'Y','Z':'Z',
                     '1':'1','2':'2','3':'3','4':'4','5':'5','6':'6','7':'7','8':'8','9':'9','0':'0','(':'(',')':')','$':'$','\'':'\'','-':'-','.':'.','—':'—',' ':' ','–':'–',
                     '’':'’','_':'_','»':'»','«':'«','ъ':'',':':':',';':';','':'','':'','':'','':'','':''}                 
def ru_name(ru):
  zove=''
  komma=ru.find(',')
  if komma==-1: return('')  
  zove=ru[komma+2:]+' '+ru[0:komma]
  return(zove)  

def oneRussian(russian,lng):
    if verbose: print(russian.title())
    data={}
    ru_lbl=newAlias=''
    if (lng in russian.labels):
      ru_lbl=ru_name(russian.labels[lng])
      if (lng in russian.aliases):
        for newAlias in russian.aliases[lng]:
          if (newAlias.find(',')==-1):
            if (len(newAlias)==len(russian.labels[lng])-1):
              addAlias=True
              if srclng in russian.labels:
                addAlias=not (newAlias==russian.labels[srclng])
              if (newAlias!='') and not(check_alias(russian,newAlias)) and (addAlias):
                data.update({'aliases':{srclng:add2alias(russian,newAlias)}})
            else:
              pass  
          else:
            pass
      else:
        pass
    else:
        pass
    if (not (srclng in russian.labels) and (ru_lbl!='')):
      newLabel=normalise_str(ru_lbl,ru_cyrilic2latin)  
      if newLabel!='':
        data.update({'labels':{f'{srclng}':f'{newLabel}'}})
    if data!={}: 
      if (verbose): print(f'edit: {data}')  
      if (commit): russian.editEntity(data,summary=f'add russian label/alias for {srclng}')    
      return(1)  
    return(0)

def testonerussian(id,lng):
  russska=pywikibot.ItemPage(pywikibot.Site('wikidata','wikidata').data_repository(), id)
  russska.get(get_redirect=True)  
  oneRussian(russska,lng)
    
def find_russians(query,lng):
  handbrake = 0  
  #russians have a label "lastname, firstnames" and an alias "firstname firstname lastname"
  for russian in wd_sparql_query(query):
    handbrake += oneRussian(russian,lng)
    #if (handbrake>3333) : print(10/0) #force error

def normalise_str(inp,char_set):
    outp=''
    for ch in inp:
      if ch in char_set:
        outp=outp+char_set[ch]
      else:
        print(f'Missing: <{ch}>-[{ord(ch)}]')
        #print(10/0)
    return(outp)

def add2alias(wd,alias):
    if srclng in wd.aliases:
      if (not (alias in wd.aliases[srclng])):
        wd.aliases[srclng].append(alias)
    else:
        return([alias])
    return(wd.aliases[srclng])

def check_alias(wd, check4alias):
  if (srclng in wd.aliases):
    for alias in wd.aliases[srclng]:
      if (alias.upper()==check4alias.upper()):
        return(True)
  if (srclng in wd.labels):
    return(wd.labels[srclng].upper()==check4alias.upper())
  return(False)        

def action_one_page(wd):
  #if verbose: print(wd.title())
  newAlias=''
  data={}
  if (not (srclng in wd.labels)):
    if srcsite in wd.sitelinks:
      data.update({'labels':{f'{srclng}':f'{wd.sitelinks[srcsite]}'}})
  if (srcsite in wd.sitelinks):
    newAlias=normalise_str(wd.sitelinks[srcsite], convertstr)
  if srclng in wd.labels:
    addAlias=not (newAlias==wd.labels[srclng])
  else:
    addAlias=False
  if (newAlias!='') and not(check_alias(wd,newAlias)) and (addAlias):
    data.update({'aliases':{srclng:add2alias(wd,newAlias)}})
  if data!={}:
    if (verbose): print(data)  
    if (commit):
      try:
        wd.editEntity(data,summary=f'add label/alias for {srclng}')    
      except:
        pass
    return(1)
  return(0)

def testrun():
 site=pywikibot.Site('wikidata','wikidata')
 repo=site.data_repository()
 wd=pywikibot.ItemPage(repo,'Q1156469') 
 wd.get(get_redirect=True)
 action_one_page(wd)

def wd_sparql_query(spq):
   generator=pg.WikidataSPARQLPageGenerator(spq,site=pywikibot.Site('wikidata','wikidata'))
   for wd in generator:
     try:
       wd.get(get_redirect=True)
       yield wd
     except:
       pass

def lastXnewpages(maxp):
  print('Begonnen')
  site=pywikibot.Site(srclng)
  mygenerator=pg.NewpagesPageGenerator(site,0,maxp)
  for onepage in mygenerator:
    if (onepage.exists()): #avoid speedy deleted 
      #print('p:%s' % onepage.title())
      if ('wikibase_item' in onepage.properties()):
       try:
        wd=onepage.data_item()  
        wd.get(get_redirect=True)
        action_one_page(wd)
       except:
        pass
  print('Klaar')

def all_from_cat(thissite,thiscat):
 print(f'Start cat: {thissite}:{thiscat}')
 site=pywikibot.Site(thissite)
 cat = pywikibot.Category(site,thiscat)
 gen = pg.CategorizedPageGenerator(cat,12)
 for onepage in gen:
   if ('wikibase_item' in onepage.properties()):
        wd=onepage.data_item()
        wd.get(get_redirect=True)
        action_one_page(wd)
 print('Klaar cat')

def process_parameters(arg):

  
  for x in arg:
    if (x[0:4]=='cat='):
      catname=x[4:]
      all_from_cat(srclng,catname)
    elif (x[0:3]=='new'):
      lastXnewpages(120000)
    else:
       print('python3 ~/core/pwb.py %s cat=\'Categorie:Hoepla\'' % arg[0])


print('Start')
process_parameters(sys.argv)
#lastXnewpages(120000)
#all_from_cat(srclng,'Categorie:Rusland')
#all_from_cat(srclng,'Categorie:Nederland')
#all_from_cat(srclng,'Categorie:Persoon naar nationaliteit')
#testrun()    
#find_russians(russiansquery,'ru')
#testonerussian('Q2391817','ru')
print('Klaar')